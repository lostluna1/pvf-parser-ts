
==============================================================================
==============================================================================


* .key 这是什么？

ai角色在程序上与玩家角色几乎完全相同，
所以要让其执行某个动作，必须输入 key。
因此，为了能自由实现一系列 key 输入，会用 .key 脚本。


==============================================================================
==============================================================================

* 标签的种类

[input]：决定输入哪个键的标签

[loop start], [loop end] 成对出现：会将块内的 [input] 标签按指定次数重复。
应用场景？用于鬼剑士的突刺后连打或普通连打攻击。




* [input] 标签可输入的按键种类
技能		`z`
攻击		`x`
跳跃		`c`
BUFF		`space`
技能快捷键	`a`, `s`, `d`, `f`, `g`, `h`
绝对方向键	`up`, `down`, `left`, `right`
相对方向键	`current direction`, `opposite direction`, `target current direction`, `target opposite direction`
自动连击键	`combo attack`
使用道具	`1`, `2`, `3`, `4`, `5`, `6`
无按键输入	``

% 相对方向键如 `current direction`，
  用于需要按下当前朝向的情况。
  例如：卡赞的指令是 → → Z 时，
      `current direction` `current direction` `Z`
      这样输入就会发动卡赞。

% 自动连击键的情况，“按下时间”表示连击次数，请注意！
  如果像元素师这种只有2段连击的角色被指定4段连击，
  会自动调整为最大连击次数，不会出错。


==============================================================================
==============================================================================


* 示例

% 请通过 [input] 标签示例来掌握。难度：海豚级。

[input]
`c` 30		// 按下 c 键 30 毫秒
`time` 300	// 300 毫秒后进入下一个按键
		// 类似 `time` 的命令称为 pass command。

[input]
		// 上面 300 毫秒后进入这里
`x` 30		// 按下 x 键 30 毫秒
`time` 300	// 300 毫秒后进入下一个按键

[input]
`x` 30
`pass` 0	// 立即进入下一个按键

[input]
`x` 30
`random` 30 100	// 30% 概率进入下一个
		// 概率判定失败则在此结束，动作停止。

[input]
`x` 30
`enemy distance` -100	// 负数=与当前目标距离小于等于100时进入下一个

[input]
`x` 30
`enemy distance` 200	// 正数=与当前目标距离大于等于200时进入下一个

[input]
`x` 30
`my zheight` 50		// 自身 z 高度大于等于50时进入下一个

[input]
`combo attack` 3	// 执行基础3段连击攻击。例如：鬼剑士
`time` 1000




% [loop start], [loop end] 标签示例。难度：海豚级。

[input]
`c` 30
`time` 300

[loop start] 10

	[input]
	`x` 30
	`time` 50

[loop end]

[input]
`z` 30
`time` 300

-> 以上脚本以鬼剑士为例说明：
 c 键被按下后跳跃，
 x 键被连续按下10次，触发普通连打攻击，
 z 键被按下后使用鬼斩收尾。

==============================================================================
==============================================================================


* pass command 的种类

`time`
`pass`
`random`

`enemy distance`
`my zheight`

`event`
`animation frame`

070423 截至目前已实现如上。


==============================================================================
==============================================================================


* AI角色的快捷栏道具使用

 1) - 增加1~6号键：在 key 目录下创建 1.key ~ 6.key，
		 并在 *.aic 文件的 [key stream] 中插入文件路径和 1.key ~ 6.key。

示例：
	[key stream]
	`AICharacter/cuwaki/key/triple attack.key`
	`AICharacter/cuwaki/key/a.key`
	`AICharacter/cuwaki/key/s.key`
	`AICharacter/cuwaki/key/d.key`

	`AICharacter/cuwaki/key/1.key`
	`AICharacter/cuwaki/key/2.key`
	`AICharacter/cuwaki/key/3.key`
	`AICharacter/cuwaki/key/4.key`
	`AICharacter/cuwaki/key/5.key`
	`AICharacter/cuwaki/key/6.key`

	[/key stream]


 2) - 指定快捷栏道具：在 *.aic 文件的 [quick item] 中按栏位指定道具编号和数量。

示例：
	// 快捷栏道具
	[quick item]
	// 道具编号, 数量
	6004	100	// 1栏
	1106	100	// 2栏
	6001	100	// 3栏
	1001	100	// 4栏
	1004	100	// 5栏
	1011	100	// 6栏
	[/quick item]

 3) - 最后在 Action.ai 文件编写脚本时，`[return]` 后指定 [key stream] 的索引，
	AI角色就会使用对应道具。

示例：
	`[return]` 5	// 第1)步中第5号索引对应2号栏，
			// 在 [quick item] 中第二项指定的1106号道具会被使用。


070626 截至目前已实现如上。

